/* tslint:disable */
/* eslint-disable */
/**
 * Build a bear Web App
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { OrderStatus } from './OrderStatus';
import {
    OrderStatusFromJSON,
    OrderStatusFromJSONTyped,
    OrderStatusToJSON,
} from './OrderStatus';
import type { PaymentMethod } from './PaymentMethod';
import {
    PaymentMethodFromJSON,
    PaymentMethodFromJSONTyped,
    PaymentMethodToJSON,
} from './PaymentMethod';
import type { TeddyBuildDTO } from './TeddyBuildDTO';
import {
    TeddyBuildDTOFromJSON,
    TeddyBuildDTOFromJSONTyped,
    TeddyBuildDTOToJSON,
} from './TeddyBuildDTO';

/**
 * 
 * @export
 * @interface OrderViewDTO
 */
export interface OrderViewDTO {
    /**
     * 
     * @type {string}
     * @memberof OrderViewDTO
     */
    id?: string;
    /**
     * 
     * @type {Array<TeddyBuildDTO>}
     * @memberof OrderViewDTO
     */
    teddies?: Array<TeddyBuildDTO> | null;
    /**
     * 
     * @type {number}
     * @memberof OrderViewDTO
     */
    price?: number;
    /**
     * 
     * @type {OrderStatus}
     * @memberof OrderViewDTO
     */
    status?: OrderStatus;
    /**
     * 
     * @type {PaymentMethod}
     * @memberof OrderViewDTO
     */
    paymentMethod?: PaymentMethod;
    /**
     * 
     * @type {string}
     * @memberof OrderViewDTO
     */
    address?: string | null;
}

/**
 * Check if a given object implements the OrderViewDTO interface.
 */
export function instanceOfOrderViewDTO(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function OrderViewDTOFromJSON(json: any): OrderViewDTO {
    return OrderViewDTOFromJSONTyped(json, false);
}

export function OrderViewDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrderViewDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'teddies': !exists(json, 'teddies') ? undefined : (json['teddies'] === null ? null : (json['teddies'] as Array<any>).map(TeddyBuildDTOFromJSON)),
        'price': !exists(json, 'price') ? undefined : json['price'],
        'status': !exists(json, 'status') ? undefined : OrderStatusFromJSON(json['status']),
        'paymentMethod': !exists(json, 'paymentMethod') ? undefined : PaymentMethodFromJSON(json['paymentMethod']),
        'address': !exists(json, 'address') ? undefined : json['address'],
    };
}

export function OrderViewDTOToJSON(value?: OrderViewDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'teddies': value.teddies === undefined ? undefined : (value.teddies === null ? null : (value.teddies as Array<any>).map(TeddyBuildDTOToJSON)),
        'price': value.price,
        'status': OrderStatusToJSON(value.status),
        'paymentMethod': PaymentMethodToJSON(value.paymentMethod),
        'address': value.address,
    };
}

