/* tslint:disable */
/* eslint-disable */
/**
 * Build a bear Web App
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { UserRoleEnum } from './UserRoleEnum';
import {
    UserRoleEnumFromJSON,
    UserRoleEnumFromJSONTyped,
    UserRoleEnumToJSON,
} from './UserRoleEnum';

/**
 * 
 * @export
 * @interface VendorUserAddDTO
 */
export interface VendorUserAddDTO {
    /**
     * 
     * @type {string}
     * @memberof VendorUserAddDTO
     */
    name?: string | null;
    /**
     * 
     * @type {string}
     * @memberof VendorUserAddDTO
     */
    email?: string | null;
    /**
     * 
     * @type {string}
     * @memberof VendorUserAddDTO
     */
    password?: string | null;
    /**
     * 
     * @type {UserRoleEnum}
     * @memberof VendorUserAddDTO
     */
    role?: UserRoleEnum;
    /**
     * 
     * @type {string}
     * @memberof VendorUserAddDTO
     */
    country?: string | null;
    /**
     * 
     * @type {string}
     * @memberof VendorUserAddDTO
     */
    city?: string | null;
    /**
     * 
     * @type {string}
     * @memberof VendorUserAddDTO
     */
    phoneNumber?: string | null;
    /**
     * 
     * @type {string}
     * @memberof VendorUserAddDTO
     */
    vendorId?: string;
}

/**
 * Check if a given object implements the VendorUserAddDTO interface.
 */
export function instanceOfVendorUserAddDTO(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function VendorUserAddDTOFromJSON(json: any): VendorUserAddDTO {
    return VendorUserAddDTOFromJSONTyped(json, false);
}

export function VendorUserAddDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): VendorUserAddDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'email': !exists(json, 'email') ? undefined : json['email'],
        'password': !exists(json, 'password') ? undefined : json['password'],
        'role': !exists(json, 'role') ? undefined : UserRoleEnumFromJSON(json['role']),
        'country': !exists(json, 'country') ? undefined : json['country'],
        'city': !exists(json, 'city') ? undefined : json['city'],
        'phoneNumber': !exists(json, 'phoneNumber') ? undefined : json['phoneNumber'],
        'vendorId': !exists(json, 'vendorId') ? undefined : json['vendorId'],
    };
}

export function VendorUserAddDTOToJSON(value?: VendorUserAddDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'email': value.email,
        'password': value.password,
        'role': UserRoleEnumToJSON(value.role),
        'country': value.country,
        'city': value.city,
        'phoneNumber': value.phoneNumber,
        'vendorId': value.vendorId,
    };
}

